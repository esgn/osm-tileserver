version: '3.5'

services:

  # For testing two postgis containers are defined:
  # * one for importing the data (postgis-import) and 
  # * one for tiles rendering (postgis)
 
  postgis-import:
    image: integration-bench/postgis-import:latest
    build: ./images/postgis
    container_name: integration-bench-postgis-import
    volumes:
      - postgis-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=renderer
      - POSTGRES_PASSWORD=postgis
      - POSTGRES_DB=osm
    command: postgres -c config_file=/import.conf

  postgis:
    image: integration-bench/postgis:latest
    build: ./images/postgis
    container_name: integration-bench-postgis
    volumes:
      - postgis-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=renderer
      - POSTGRES_PASSWORD=postgis
      - POSTGRES_DB=osm
    # Additional parameters to output logs to file. /pg_logs is created by default in the image
    # command: ... -c log_directory=/pg_logs -c logging_collector=on -c log_destination=stderr
    command: postgres -c config_file=/render.conf 
    # This option is necessary to prevent overflowing /dev/shm
    shm_size: '4gb'

  # In order to make tests with imposm3 at some point
  
  imposm3:
    image: integration-bench/imposm3:latest
    build: ./images/imposm3
    container_name: integration-bench-imposm3
    volumes:
      - ./data:/data
    environment:
      - PGHOST=postgis
      - PGUSER=renderer
      - PGPASSWORD=postgis
      - PGDATABASE=osm
    depends_on:
      - postgis-import
  
  # Image used to run osm2pgsql for importing osm data into database
  # It waits for postgresql to be available and shutdown postgresql after import
  # It imports data, build indexes and vacuum the database
  
  osm2pgsql:
    image: integration-bench/osm2pgsql:latest
    build:
      context: ./images/osm2pgsql
      args:
        - OSM_CARTO_VERSION=5.2.0
        - OSM2PGSQL_VERSION=1.3.0
    container_name: integration-bench-osm2pgsql
    volumes:
      - ./data:/home/renderer/data
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs/importer:/var/log/importer/
    environment:
      - PGHOST=postgis-import
      - PGUSER=renderer
      - PGPASSWORD=postgis
      - PGDATABASE=osm
      - PGCONTAINER=integration-bench-postgis-import
    depends_on:
      - postgis-import

  # Standalone image for updating the database
  # Also in charge of tile expiry/renewal
  # Accesses the tile server renderd daemon through its sock file
  
  updater:
    image: integration-bench/updater:latest
    build: ./images/updater
    container_name: integration-bench-updater
    volumes:
      - ./data:/data
      - osmosis-workdir:/osmosis-workdir
      - mod_tile:/var/lib/mod_tile
      - ./logs/updater:/var/log/updater/
      - renderd:/var/run/renderd
    environment:
      - PGHOST=postgis
      - PGUSER=renderer
      - PGPASSWORD=postgis
      - PGDATABASE=osm
    depends_on:
      - postgis

  # The tile server per se producing tiles using 
  # apache2 + mod_tile/renderd + mapnik
  
  tile-server:
    image: integration-bench/tile-server:latest
    build: 
      context: ./images/tile-server
      args:
        - PGHOST=postgis
        - PGUSER=renderer
        - PGPASSWORD=postgis
        - PGDATABASE=osm
    # Expose tile server on local port
    # Comment to deactivate or change port number
    ports:
      - 8888:80
    container_name: integration-bench-tile-server
    volumes:
      - mod_tile:/var/lib/mod_tile
      - renderd:/var/run/renderd
    depends_on:
      - postgis

#Named volumes

volumes:
  postgis-data:
  osmosis-workdir:
  mod_tile:
  renderd:

# In case we need to connect all containers to existing network
# For example if you use with nginx-proxy-manager

#networks:
  #default:
    #external:
      #name: nxpm
